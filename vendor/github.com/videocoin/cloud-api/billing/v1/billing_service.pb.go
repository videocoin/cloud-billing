// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: billing/v1/billing_service.proto

package v1

import (
	context "context"
	encoding_binary "encoding/binary"
	fmt "fmt"
	_ "github.com/gogo/googleapis/google/api"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "github.com/gogo/protobuf/types"
	golang_proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = golang_proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MakePaymentRequest struct {
	Amount               float64  `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakePaymentRequest) Reset()         { *m = MakePaymentRequest{} }
func (m *MakePaymentRequest) String() string { return proto.CompactTextString(m) }
func (*MakePaymentRequest) ProtoMessage()    {}
func (*MakePaymentRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bde738a35a0fff, []int{0}
}
func (m *MakePaymentRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MakePaymentRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MakePaymentRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MakePaymentRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakePaymentRequest.Merge(m, src)
}
func (m *MakePaymentRequest) XXX_Size() int {
	return m.Size()
}
func (m *MakePaymentRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MakePaymentRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MakePaymentRequest proto.InternalMessageInfo

func (m *MakePaymentRequest) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (*MakePaymentRequest) XXX_MessageName() string {
	return "cloud.api.billing.v1.MakePaymentRequest"
}

type MakePaymentResponse struct {
	SessionId            string   `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MakePaymentResponse) Reset()         { *m = MakePaymentResponse{} }
func (m *MakePaymentResponse) String() string { return proto.CompactTextString(m) }
func (*MakePaymentResponse) ProtoMessage()    {}
func (*MakePaymentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bde738a35a0fff, []int{1}
}
func (m *MakePaymentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MakePaymentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MakePaymentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MakePaymentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MakePaymentResponse.Merge(m, src)
}
func (m *MakePaymentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MakePaymentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MakePaymentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MakePaymentResponse proto.InternalMessageInfo

func (m *MakePaymentResponse) GetSessionId() string {
	if m != nil {
		return m.SessionId
	}
	return ""
}

func (*MakePaymentResponse) XXX_MessageName() string {
	return "cloud.api.billing.v1.MakePaymentResponse"
}

type TransactionRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bde738a35a0fff, []int{2}
}
func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return m.Size()
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (*TransactionRequest) XXX_MessageName() string {
	return "cloud.api.billing.v1.TransactionRequest"
}

type TransactionResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bde738a35a0fff, []int{3}
}
func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(m, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return m.Size()
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (*TransactionResponse) XXX_MessageName() string {
	return "cloud.api.billing.v1.TransactionResponse"
}

type TransactionListResponse struct {
	Items                []*TransactionResponse `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionListResponse) Reset()         { *m = TransactionListResponse{} }
func (m *TransactionListResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionListResponse) ProtoMessage()    {}
func (*TransactionListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e1bde738a35a0fff, []int{4}
}
func (m *TransactionListResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TransactionListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TransactionListResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TransactionListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionListResponse.Merge(m, src)
}
func (m *TransactionListResponse) XXX_Size() int {
	return m.Size()
}
func (m *TransactionListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionListResponse proto.InternalMessageInfo

func (m *TransactionListResponse) GetItems() []*TransactionResponse {
	if m != nil {
		return m.Items
	}
	return nil
}

func (*TransactionListResponse) XXX_MessageName() string {
	return "cloud.api.billing.v1.TransactionListResponse"
}
func init() {
	proto.RegisterType((*MakePaymentRequest)(nil), "cloud.api.billing.v1.MakePaymentRequest")
	golang_proto.RegisterType((*MakePaymentRequest)(nil), "cloud.api.billing.v1.MakePaymentRequest")
	proto.RegisterType((*MakePaymentResponse)(nil), "cloud.api.billing.v1.MakePaymentResponse")
	golang_proto.RegisterType((*MakePaymentResponse)(nil), "cloud.api.billing.v1.MakePaymentResponse")
	proto.RegisterType((*TransactionRequest)(nil), "cloud.api.billing.v1.TransactionRequest")
	golang_proto.RegisterType((*TransactionRequest)(nil), "cloud.api.billing.v1.TransactionRequest")
	proto.RegisterType((*TransactionResponse)(nil), "cloud.api.billing.v1.TransactionResponse")
	golang_proto.RegisterType((*TransactionResponse)(nil), "cloud.api.billing.v1.TransactionResponse")
	proto.RegisterType((*TransactionListResponse)(nil), "cloud.api.billing.v1.TransactionListResponse")
	golang_proto.RegisterType((*TransactionListResponse)(nil), "cloud.api.billing.v1.TransactionListResponse")
}

func init() { proto.RegisterFile("billing/v1/billing_service.proto", fileDescriptor_e1bde738a35a0fff) }
func init() {
	golang_proto.RegisterFile("billing/v1/billing_service.proto", fileDescriptor_e1bde738a35a0fff)
}

var fileDescriptor_e1bde738a35a0fff = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x6a, 0xdb, 0x30,
	0x14, 0xc6, 0x91, 0xc7, 0x02, 0x51, 0x60, 0x03, 0x25, 0x5b, 0x3c, 0x2f, 0x73, 0x8c, 0xd9, 0x85,
	0x03, 0x8b, 0x4d, 0xb2, 0xdd, 0x0f, 0x72, 0x33, 0x06, 0x2d, 0x14, 0xb7, 0x57, 0xb9, 0x09, 0xb2,
	0xa3, 0xba, 0xa2, 0xb6, 0xe4, 0x46, 0xb2, 0x21, 0xb7, 0xed, 0x0b, 0x14, 0xfa, 0x14, 0x7d, 0x8b,
	0x5e, 0xe6, 0xb2, 0xd0, 0x17, 0x28, 0x49, 0x1f, 0xa4, 0xd4, 0x16, 0xc4, 0xf9, 0x53, 0xda, 0x3b,
	0x9d, 0x73, 0x7e, 0x3a, 0xe7, 0xd3, 0xa7, 0x03, 0xad, 0x80, 0xc6, 0x31, 0x65, 0x91, 0x97, 0x0f,
	0x3c, 0x75, 0x9c, 0x08, 0x32, 0xcb, 0x69, 0x48, 0xdc, 0x74, 0xc6, 0x25, 0x47, 0xad, 0x30, 0xe6,
	0xd9, 0xd4, 0xc5, 0x29, 0x75, 0x15, 0xe0, 0xe6, 0x03, 0xa3, 0x1f, 0x51, 0x79, 0x96, 0x05, 0x6e,
	0xc8, 0x13, 0x2f, 0xe2, 0x11, 0xf7, 0x0a, 0x38, 0xc8, 0x4e, 0x8b, 0xa8, 0x08, 0x8a, 0x53, 0xd9,
	0xc4, 0xf8, 0x1e, 0x71, 0x1e, 0xc5, 0x64, 0x4d, 0x91, 0x24, 0x95, 0x73, 0x55, 0xec, 0xa8, 0x22,
	0x4e, 0xa9, 0x87, 0x19, 0xe3, 0x12, 0x4b, 0xca, 0x99, 0x50, 0xd5, 0xee, 0xf6, 0x55, 0x49, 0x13,
	0x22, 0x24, 0x4e, 0xd2, 0x12, 0xb0, 0x7f, 0x41, 0x74, 0x88, 0xcf, 0xc9, 0x11, 0x9e, 0x27, 0x84,
	0x49, 0x9f, 0x5c, 0x64, 0x44, 0x48, 0xf4, 0x15, 0xd6, 0x70, 0xc2, 0x33, 0x26, 0x75, 0x60, 0x01,
	0x07, 0xf8, 0x2a, 0xb2, 0xff, 0xc0, 0xe6, 0x06, 0x2d, 0x52, 0xce, 0x04, 0x41, 0x3f, 0x20, 0x14,
	0x44, 0x08, 0xca, 0xd9, 0x84, 0x4e, 0x75, 0xcd, 0x02, 0x4e, 0xdd, 0xaf, 0xab, 0xcc, 0xff, 0xa9,
	0xdd, 0x82, 0xe8, 0x64, 0x86, 0x99, 0xc0, 0xe1, 0x8b, 0x34, 0x35, 0xc3, 0xfe, 0x02, 0x9b, 0x1b,
	0xd9, 0xb2, 0x97, 0x3d, 0x86, 0xed, 0x4a, 0xfa, 0x80, 0x8a, 0xf5, 0x98, 0xbf, 0xf0, 0x23, 0x95,
	0x24, 0x11, 0x3a, 0xb0, 0x3e, 0x38, 0x8d, 0x61, 0xcf, 0xdd, 0x67, 0xae, 0xbb, 0xa7, 0xa9, 0x5f,
	0xde, 0x1b, 0xde, 0x6a, 0xf0, 0xd3, 0xa8, 0x24, 0x8f, 0xcb, 0x6f, 0x42, 0x57, 0x00, 0x36, 0x2a,
	0x4f, 0x42, 0xce, 0xfe, 0xa6, 0xbb, 0x1e, 0x19, 0xbd, 0x77, 0x90, 0xea, 0x4d, 0xdd, 0xcb, 0x87,
	0xa7, 0x1b, 0xed, 0x9b, 0xdd, 0x2e, 0x7e, 0x69, 0xbd, 0x2c, 0x5e, 0xaa, 0xa6, 0x5e, 0x03, 0xf8,
	0xf9, 0x1f, 0x91, 0x15, 0xe9, 0xe2, 0x35, 0x25, 0xbb, 0x4e, 0x1a, 0xfd, 0x37, 0xc9, 0xaa, 0x8d,
	0xf6, 0xcf, 0x42, 0x8d, 0x89, 0x3a, 0xdb, 0x6a, 0x64, 0x65, 0xfc, 0x48, 0x5f, 0x2c, 0x4d, 0x70,
	0xbf, 0x34, 0xc1, 0xe3, 0xd2, 0x04, 0x77, 0x2b, 0x13, 0x2c, 0x56, 0x26, 0x18, 0x6b, 0xf9, 0x20,
	0xa8, 0x15, 0x9b, 0xf3, 0xfb, 0x39, 0x00, 0x00, 0xff, 0xff, 0x53, 0x7a, 0xb1, 0x43, 0xfe, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BillingServiceClient is the client API for BillingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BillingServiceClient interface {
	MakePayment(ctx context.Context, in *MakePaymentRequest, opts ...grpc.CallOption) (*MakePaymentResponse, error)
	GetTransactions(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionListResponse, error)
}

type billingServiceClient struct {
	cc *grpc.ClientConn
}

func NewBillingServiceClient(cc *grpc.ClientConn) BillingServiceClient {
	return &billingServiceClient{cc}
}

func (c *billingServiceClient) MakePayment(ctx context.Context, in *MakePaymentRequest, opts ...grpc.CallOption) (*MakePaymentResponse, error) {
	out := new(MakePaymentResponse)
	err := c.cc.Invoke(ctx, "/cloud.api.billing.v1.BillingService/MakePayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billingServiceClient) GetTransactions(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TransactionListResponse, error) {
	out := new(TransactionListResponse)
	err := c.cc.Invoke(ctx, "/cloud.api.billing.v1.BillingService/GetTransactions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillingServiceServer is the server API for BillingService service.
type BillingServiceServer interface {
	MakePayment(context.Context, *MakePaymentRequest) (*MakePaymentResponse, error)
	GetTransactions(context.Context, *TransactionRequest) (*TransactionListResponse, error)
}

// UnimplementedBillingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBillingServiceServer struct {
}

func (*UnimplementedBillingServiceServer) MakePayment(ctx context.Context, req *MakePaymentRequest) (*MakePaymentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MakePayment not implemented")
}
func (*UnimplementedBillingServiceServer) GetTransactions(ctx context.Context, req *TransactionRequest) (*TransactionListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTransactions not implemented")
}

func RegisterBillingServiceServer(s *grpc.Server, srv BillingServiceServer) {
	s.RegisterService(&_BillingService_serviceDesc, srv)
}

func _BillingService_MakePayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MakePaymentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).MakePayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.billing.v1.BillingService/MakePayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).MakePayment(ctx, req.(*MakePaymentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillingService_GetTransactions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillingServiceServer).GetTransactions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cloud.api.billing.v1.BillingService/GetTransactions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillingServiceServer).GetTransactions(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BillingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cloud.api.billing.v1.BillingService",
	HandlerType: (*BillingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakePayment",
			Handler:    _BillingService_MakePayment_Handler,
		},
		{
			MethodName: "GetTransactions",
			Handler:    _BillingService_GetTransactions_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "billing/v1/billing_service.proto",
}

func (m *MakePaymentRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MakePaymentRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MakePaymentRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Amount != 0 {
		i -= 8
		encoding_binary.LittleEndian.PutUint64(dAtA[i:], uint64(math.Float64bits(float64(m.Amount))))
		i--
		dAtA[i] = 0x9
	}
	return len(dAtA) - i, nil
}

func (m *MakePaymentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MakePaymentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MakePaymentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.SessionId) > 0 {
		i -= len(m.SessionId)
		copy(dAtA[i:], m.SessionId)
		i = encodeVarintBillingService(dAtA, i, uint64(len(m.SessionId)))
		i--
		dAtA[i] = 0x12
	}
	return len(dAtA) - i, nil
}

func (m *TransactionRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *TransactionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *TransactionListResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TransactionListResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TransactionListResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintBillingService(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintBillingService(dAtA []byte, offset int, v uint64) int {
	offset -= sovBillingService(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MakePaymentRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Amount != 0 {
		n += 9
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MakePaymentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.SessionId)
	if l > 0 {
		n += 1 + l + sovBillingService(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TransactionRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TransactionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TransactionListResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovBillingService(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovBillingService(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozBillingService(x uint64) (n int) {
	return sovBillingService(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MakePaymentRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MakePaymentRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MakePaymentRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 1 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var v uint64
			if (iNdEx + 8) > l {
				return io.ErrUnexpectedEOF
			}
			v = uint64(encoding_binary.LittleEndian.Uint64(dAtA[iNdEx:]))
			iNdEx += 8
			m.Amount = float64(math.Float64frombits(v))
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MakePaymentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MakePaymentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MakePaymentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SessionId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthBillingService
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthBillingService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SessionId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TransactionRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TransactionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TransactionListResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TransactionListResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TransactionListResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthBillingService
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthBillingService
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &TransactionResponse{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipBillingService(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthBillingService
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipBillingService(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowBillingService
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowBillingService
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthBillingService
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupBillingService
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthBillingService
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthBillingService        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowBillingService          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupBillingService = fmt.Errorf("proto: unexpected end of group")
)
